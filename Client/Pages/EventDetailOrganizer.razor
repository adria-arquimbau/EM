@page "/event-detail-organizer/{EventId:guid}"

@using EventsManager.Shared.Dtos
@using Microsoft.AspNetCore.Authorization
@inject HttpClient Http

@attribute [Authorize(Roles = "Organizer")]

<PageTitle>Event @eventDetail?.Name</PageTitle>

@if (eventDetail == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="card">
        <div class="card-header">
            <h3>@eventDetail.Name</h3>
            <button class="btn btn-primary float-end" @onclick="ToggleEditMode">Edit</button>
        </div>
        <ul class="list-group list-group-flush">
            <li class="list-group-item"><strong>Description:</strong> @eventDetail.Description</li>
            <li class="list-group-item"><strong>Location:</strong> @eventDetail.Location</li>
            <li class="list-group-item"><strong>Max Registrations:</strong> @eventDetail.MaxRegistrations</li>
            <li class="list-group-item"><strong>Is Public:</strong> @eventDetail.IsPublic</li>
            <li class="list-group-item"><strong>Open Registrations Date:</strong> @eventDetail.OpenRegistrationsDate</li>
            <li class="list-group-item"><strong>Close Registrations Date:</strong> @eventDetail.CloseRegistrationsDate</li>
            <li class="list-group-item"><strong>Start Date:</strong> @eventDetail.StartDate</li>
            <li class="list-group-item"><strong>Finish Date:</strong> @eventDetail.FinishDate</li>
            <li class="list-group-item"><strong>Creation Date:</strong> @eventDetail.CreationDate</li>
        </ul>
    </div>
}

@if (isEditMode)
{
    <div class="modal show d-block" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Event</h5>
                    <button type="button" class="btn-close" @onclick="ToggleEditMode"></button>
                </div>
                <div class="modal-body">
                    <EditForm Model="eventDetail" OnValidSubmit="HandleValidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <label for="name">Name:</label>
                        <InputText id="name" @bind-Value="eventDetail.Name" class="form-control my-2" />

                        <label for="description">Description:</label>
                        <InputTextArea id="description" @bind-Value="eventDetail.Description" class="form-control my-2" />

                        <label for="location">Location:</label>
                        <InputText id="location" @bind-Value="eventDetail.Location" class="form-control my-2" />

                        <label for="maxRegistrations">Max Registrations:</label>
                        <InputNumber id="maxRegistrations" @bind-Value="eventDetail.MaxRegistrations" class="form-control my-2" />

                        <label for="isPublic">Public Event:</label>
                        <InputCheckbox id="isPublic" @bind-Value="eventDetail.IsPublic" class="form-check-input my-2" />

                        <label for="openRegistrationsDate">Open Registrations Date:</label>
                        <InputDate id="openRegistrationsDate" @bind-Value="eventDetail.OpenRegistrationsDate" class="form-control my-2" />

                        <label for="closeRegistrationsDate">Close Registrations Date:</label>
                        <InputDate id="closeRegistrationsDate" @bind-Value="eventDetail.CloseRegistrationsDate" class="form-control my-2" />

                        <label for="startDate">Start Date:</label>
                        <InputDate id="startDate" @bind-Value="eventDetail.StartDate" class="form-control my-2" />

                        <label for="finishDate">Finish Date:</label>
                        <InputDate id="finishDate" @bind-Value="eventDetail.FinishDate" class="form-control my-2" />

                    </EditForm>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="ToggleEditMode">Close</button>
                    <button type="submit" class="btn btn-primary" @onclick="HandleValidSubmit">Save</button>
                </div>
            </div>
        </div>
    </div>
}


@code {
    [Parameter]
    public Guid? EventId { get; set; }

    private MyEventDto eventDetail;
    private bool isEditMode = false;

    protected override async Task OnInitializedAsync()
    {
        eventDetail = await Http.GetFromJsonAsync<MyEventDto>($"Event/{EventId}");
    }

    private void ToggleEditMode()
    {
        isEditMode = !isEditMode;
    }
    
    private async Task HandleValidSubmit()
    {
        await Http.PutAsJsonAsync($"Event/{EventId}", eventDetail);
        eventDetail = await Http.GetFromJsonAsync<MyEventDto>($"Event/{EventId}");
        isEditMode = false;
    }
}
