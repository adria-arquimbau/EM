@page "/organizer-manager"
@using Microsoft.AspNetCore.Authorization
@using EventsManager.Client.Components.Event
@using EventsManager.Shared.Dtos
@inject HttpClient Http
@inject IToastService ToastService


@attribute [Authorize(Roles = "Organizer")]

<h3>OrganizerManager</h3>
<FluentDivider></FluentDivider>
<button class="btn btn-primary" @onclick="OpenModal">Create Event</button>
<FluentDivider></FluentDivider>
<MyEventsList MyEvents="myEvents"></MyEventsList>

@if (showModal)
{
    <div class="modal show d-block" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create Event</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    <CreateEvent OnEventCreated="CloseModal"/>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop show"></div>
}

@code {
    private bool showModal = false;
    private List<MyEventDto> myEvents { get; set; }
    
    private void OpenModal()
    {
        showModal = true;
    }

    private async Task CloseModal()
    {
        try
        {
            myEvents = await Http.GetFromJsonAsync<List<MyEventDto>>("Event/my-events");
        }
        catch (Exception)
        {
            ToastService.ShowError("Something went wrong. Please try again later.");
        }
        showModal = false;
    }
}
