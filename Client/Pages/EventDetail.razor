@page "/event-detail/{EventId:guid}"

@using EventsManager.Shared.Dtos
@using EventsManager.Client.Components.Event
@inject IHttpClientFactory HttpClientFactory
@inject IToastService ToastService

<PageTitle>@eventName</PageTitle>


<PublicEventDetail EventId="EventId" />


@code {
    [Parameter]
    public Guid? EventId { get; set; }
    private string eventName;
    
    protected override async Task OnInitializedAsync()
    {
        await GetBasicInfoAboutEventDetails();
    }

    private async Task GetBasicInfoAboutEventDetails()
    {
        var http = HttpClientFactory.CreateClient("EventsManager.ServerAPI.Anonymous");
        try
        {
            var response = await http.GetFromJsonAsync<EventDto>($"Event/{EventId}");
            eventName = response.Name;
        }
        catch (Exception)
        {
            ToastService.ShowError("Something went wrong. Please try again later.");
        }
    }
}
